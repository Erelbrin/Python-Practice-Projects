"""This is a game called Tic-Tac-Toe."""

from random import choice


def win_check(board):
    """Checks whether there is a winner or a draw."""
    win_conditions = [(1, 2, 3), (4, 5, 6), (7, 8, 9), (1, 4, 7), (2, 5, 8), (3, 6, 9), (1, 5, 9), (3, 5, 7)]
    for a,b,c in win_conditions:
        if board[a] == board[b] == board[c] == "X":
            return "X"
        if board[a] == board[b] == board[c] == "O":
            return "O"
    if " " not in board:
        return "Draw"


def game_ai(acceptable, board, ai_level, ai_mark, user_mark):
    """This is a function that categorizes Ai behaviour into 3 levels and ai response by difficulty"""
    win_conditions = [(1, 2, 3), (4, 5, 6), (7, 8, 9), (1, 4, 7), (2, 5, 8), (3, 6, 9), (1, 5, 9), (3, 5, 7)]
    user_win_block = []
    possible_moves = []
    user_possible_moves = []
    if ai_level == 1:
        ai_choice = choice(acceptable)
        index = acceptable.index(ai_choice)
        return int(ai_choice), index

    for condition in win_conditions:
        ai_count = 0
        user_count = 0
        empty_box = []
        for box in condition:
            if board[box] == ai_mark:
                ai_count += 1
            elif board[box] == user_mark:
                user_count += 1
            else:
                empty_box.append(box)
        if ai_count == 2 and len(empty_box) == 1:
            return empty_box[0], acceptable.index(str(empty_box[0]))
        if user_count == 2 and len(empty_box) == 1:
            user_win_block.append((empty_box[0], acceptable.index(str(empty_box[0]))))
        if ai_count == 1 and len(empty_box) == 2:
            possible_moves.append(empty_box[0])
            possible_moves.append(empty_box[1])

    if len(user_win_block) != 0:
        return user_win_block[0][0], user_win_block[0][1]
    if ai_level == 2 and len(possible_moves) != 0:
        ai_choice = choice(possible_moves)
        return ai_choice, acceptable.index(str(ai_choice))
    if ai_level == 3:
        excellent_move = []
        user_excellent_move = []
        if len(possible_moves) != 0:
            for move in set(possible_moves):
                if possible_moves.count(move) > 1:
                    excellent_move.append(move)
            if len(excellent_move) != 0:
                ai_choice = choice(excellent_move)
                return ai_choice, acceptable.index(str(ai_choice))
            ai_choice = choice(possible_moves)
            return ai_choice, acceptable.index(str(ai_choice))

        if len(user_possible_moves) != 0:
            for move in set(user_possible_moves):
                if user_possible_moves.count(move) > 1:
                    user_excellent_move.append(move)
            if len(user_possible_moves) != 0:
                ai_choice = choice(user_excellent_move)
                return ai_choice, acceptable.index(str(ai_choice))

    if "5" in acceptable:
        return 5, acceptable.index("5")
    moves = []
    for move in ["1", "3", "7", "9"]:
        if move in acceptable:
            moves.append(move)
    if len(moves) != 0:
        ai_choice = choice(moves)
        return int(ai_choice), acceptable.index(str(ai_choice))

    ai_choice = choice(acceptable)
    index = acceptable.index(ai_choice)
    return int(ai_choice), index


def menu():
    """This is the function to manage user interaction with this mai menu."""
    acceptable_input = ["1", "2", "0"]
    print("Welcome to Tic-Tac-Toe !")
    while True:
        user_input = input("-------\nPress 1 for New game\nPress 2 for How to Play\nPress 0 to Quit\n-------")
        if user_input in acceptable_input:
            user_int = int(user_input)
            if user_int == 1:
                while True:
                    user_input = input("-------\nPress 1 for Easy difficulty\nPress 2 for Medium difficulty\nPress 3"
                                       " for Hard difficulty\nPress 0 for Main Menu\n-------")
                    if user_input == "1":
                        while True:
                            x_o = input("------\nSelected Difficulty: Easy\n"
                                        "Press 1 to go first\nPress 2 to go second\nPress 0 to go back\n"
                                        "------")
                            if x_o == "1":
                                game_engine(True, 1)
                            elif x_o == "2":
                                game_engine(False, 1)
                            elif x_o == "0":
                                break
                    elif user_input == "2":
                        while True:
                            x_o = input("------\nSelected Difficulty: Medium\n"
                                        "Press 1 to go first\nPress 2 to go second\nPress 0 to go back\n"
                                        "------")
                            if x_o == "1":
                                game_engine(True, 2)
                            elif x_o == "2":
                                game_engine(False, 2)
                            elif x_o == "0":
                                break
                    elif user_input == "3":
                        while True:
                            x_o = input("------\nSelected Difficulty: Hard\n"
                                        "Press 1 to go first\nPress 2 to go second\nPress 0 to go back\n"
                                        "------")
                            if x_o == "1":
                                game_engine(True, 3)
                            elif x_o == "2":
                                game_engine(False, 3)
                            elif x_o == "0":
                                break
                    elif user_input == "0":
                        break
            elif user_int == 2:
                print("The game plays on a 3x3 board with 3 rows and 3 columns of 9 boxes.\n"
                      "The first player plays as X, the second player plays as O.\n"
                      "You need to select the number corresponding to the box you want to place your mark.\n"
                      "-------------\n| 7 | 8 | 9 |\n-------------\n| 4 | 5 | 6 |\n-------------\n| 1 | 2 | 3 |\n"
                      "If you can align 3 of your mark in a vertically, horizontally or as cross, you win.")
            else:
                print("Thanks for playing.")
                quit()


def game_engine(turn, ai_level):
    """This is the game engine that executes the game logic."""
    if turn:
        user_mark = "X"
        ai_mark = "O"
    else:
        user_mark = "O"
        ai_mark = "X"
    acceptable = ["1", "2", "3", "4", "5", "6", "7", "8", "9"]
    board_list = [0, " ", " ", " ", " ", " ", " ", " ", " ", " "]
    while True:
        if turn:
            user_input = input("Please select the box you want to mark(1 to 9).")
            if user_input in acceptable:
                user_int = int(user_input)
                board_list[user_int] = user_mark
                acceptable.pop(acceptable.index(str(user_int)))
                turn = False

            else:
                print(f"Available boxes are: {acceptable}")
                continue

        elif not turn:
            ai_choice, index = game_ai(acceptable, board_list, ai_level, ai_mark, user_mark)
            board_list[ai_choice] = ai_mark
            acceptable.pop(index)
            board = f"-------------\n" \
                    f"| {board_list[7]} | {board_list[8]} | {board_list[9]} |\n" \
                    f"-------------\n" \
                    f"| {board_list[4]} | {board_list[5]} | {board_list[6]} |\n" \
                    f"-------------\n" \
                    f"| {board_list[1]} | {board_list[2]} | {board_list[3]} |\n"
            print("AI made its move.Current Board:")
            print(board)
            turn = True

        won = win_check(board_list)
        if won == user_mark:
            print("You have won the game.")
            break
        if won == ai_mark:
            print("AI have won the game. Good luck next time.")
            break
        if won == "Draw":
            print("It was a Draw!")
            break


menu()
